/*
 * Copyright (c) 2016 CA. All rights reserved.
 *
 * This software may be modified and distributed under the terms
 * of the MIT license.  See the LICENSE file for details.
 *
 */

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 34
        versionName "3.4"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../docs/mag_javadoc/")
    failOnError false
    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.header("Internal interface for MAS")

    include '**/MobileSso.java'
    include '**/MobileSsoFactory.java'
    include '**/MobileSsoListener.java'
    include '**/MssoIntents.java'
    include '**/app/App.java'
    include '**/auth/**/*'
    include '**/*Exception.java'
    include '**/MAGResultReceiver.java'

    include '**/MAGRequest.java'
    include '**/MAGError.java'
    include '**/ContentType.java'
    include '**/MAGRequestBody.java'
    include '**/MAGResponse.java'
    include '**/MAGResponseBody.java'

    exclude '**/BluetoothLePeripheral.java'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:support-annotations:$rootProject.ext.supportAnnotationsVersion"
    compile "com.google.zxing:core:$rootProject.ext.zxingVersion"
}

//jcenter integration
group 'com.ca'

project.version = mag_version
bintray {
    user = bintray_user
    key = bintray_api_key

    configurations = ['archives'] //When uploading configuration files
    pkg {
        repo = 'maven'
        name = 'mag'
        userOrg = 'caapim'
        desc = 'CA Mobile API Gateway (MAG) provides enterprises with a secure mobile backend for system integration and allows control over which users, devices, and applications can access your APIs. The gateway enables developers to leverage standards for API security (for example, OAuth2, OpenID Connect, PKI) through client SDKs for Android, iOS and other platforms.'
        websiteUrl = siteUrl
        issueTrackerUrl = issueUrl
        vcsUrl = gitUrl
        licenses = ['MIT']
        labels = ['aar', 'android', 'oauth', 'security']
        publicDownloadNumbers = true

        version {
            name = project.version
            desc = 'CA Mobile API Gateway'
        }
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'CA Mobile API Gateway'
                url siteUrl
                licenses {
                    license {
                        name 'MIT'
                        url 'https://github.com/CAAPIM/Android-MAS-SDK/blob/develop/LICENSE'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}

